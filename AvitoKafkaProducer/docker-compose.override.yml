version: '3.4'

services:
  avitokafkaproducer:
    environment:
      - LISTEN_PORT=3010
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    build:
      context: .
      dockerfile: AvitoKafkaProducer/Dockerfile
    ports:
      - "3010:3010"
    networks:
      - dockerapi-kafka-dev
    depends_on:
      init-kafka:
        condition: service_completed_successfully
  
  avitokafkaconsumer:
    build:
      context: .
      dockerfile: AvitoKafkaConsumer/Dockerfile
    ports:
      - "4010:4010"
    networks:
      - dockerapi-kafka-dev
    depends_on:
      init-kafka:
        condition: service_completed_successfully

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - dockerapi-kafka-dev


  kafka-1:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,EXTERNAL://localhost:29092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - dockerapi-kafka-dev


  kafka-2:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9093:29093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9093,EXTERNAL://localhost:29093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - dockerapi-kafka-dev


  kafka-3:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9094:29094'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:9094,EXTERNAL://localhost:29094
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - dockerapi-kafka-dev

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka-1:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka-1:9092 --create --if-not-exists --topic messages --replication-factor 3 --partitions 1
      kafka-topics --bootstrap-server kafka-1:9092 --create --if-not-exists --topic deadletterqueue --replication-factor 3 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka-1:9092 --list
      "
    networks:
      - dockerapi-kafka-dev

networks:
  dockerapi-kafka-dev:
    driver: bridge
